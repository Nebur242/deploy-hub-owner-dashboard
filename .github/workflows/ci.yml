name: NextJS CI

on:
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    name: üß™ Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        # run: npm run type-check
        # If you don't have a separate type-check script, you can use:
        run: npx tsc --noEmit

      # - name: Run tests
      #   run: npm test

  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build NextJS application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: .next/
          retention-days: 7

  preview-deployment:
    name: üöÄ Preview Deployment
    runs-on: ubuntu-latest
    needs: build
    # Optional: Only run on PRs from specific branches or with specific labels
    # if: ${{ github.event.pull_request.head.ref == 'feature-branch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: .next/

      # Optional: Deploy to preview environment
      # Here you would add steps to deploy to Vercel, Netlify, or your custom preview env
      # Example for Vercel:
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      # Example for commenting the preview URL on the PR
      - name: Comment on PR
        uses: actions/github-script@v6
        if: success() && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `‚úÖ PR preview deployed successfully!\nPreview: https://preview-url-for-${issue_number}.your-domain.com`
            });
