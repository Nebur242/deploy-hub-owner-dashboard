name: NextJS CI

on:
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    name: 🧪 Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

  build-and-deploy:
    name: 🏗️ Build and Deploy
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Fetch Doppler Secrets
        run: |
          doppler configure set token ${{ secrets.DOPPLER_TOKEN }}
          doppler secrets --project ${{ secrets.DOPPLER_PROJECT }} --config dev_owner_dashboard --token "${{ secrets.DOPPLER_TOKEN }}" download --format=env --no-file > .env

      - name: Build NextJS application
        run: npm run build

      # Deploy directly instead of using artifacts
      - name: Deploy to Vercel Preview
      - uses: amondnet/vercel-action@v25 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      # Comment on PR with the preview URL
      - name: Comment on PR
        uses: actions/github-script@v6
        if: success() && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Get the deployment URL from Vercel response
            // You might need to adjust this based on how vercel-action outputs the URL
            const previewUrl = `https://${owner}-${repo}-git-${context.payload.pull_request.head.ref}-${owner}.vercel.app`;

            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: issue_number,
              body: `✅ PR preview deployed successfully!\nPreview: ${previewUrl}`
            });
